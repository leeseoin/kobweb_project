openapi: 3.1.0
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
tags:
- name: Friend Request
  description: 친구 요청 관련 API
- name: Alarm
  description: 알람 관련 API
- name: WebSocket Health
  description: WebSocket 헬스체크 및 관리 API
- name: Chat
  description: 채팅 관련 API
paths:
  /api/v1/users/{userId}:
    get:
      tags:
      - user-controller
      operationId: getUserById
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    put:
      tags:
      - user-controller
      operationId: updateUser
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserUpdateRequestDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    delete:
      tags:
      - user-controller
      operationId: deleteUser
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/v1/resumes/{resumeId}:
    get:
      tags:
      - resume-controller
      operationId: getResume
      parameters:
      - name: resumeId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponseResumeResponseDto"
    put:
      tags:
      - resume-controller
      operationId: updateResume
      parameters:
      - name: resumeId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResumeRequestDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponseResumeResponseDto"
    delete:
      tags:
      - resume-controller
      operationId: deleteResume
      parameters:
      - name: resumeId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponseVoid"
  /api/v1/profiles/me:
    put:
      tags:
      - profile-controller
      operationId: updateMyProfile
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProfileUpdateRequestDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponseProfileResponseDto"
  /api/v1/business-cards/{businessCardId}:
    get:
      tags:
      - business-card-controller
      operationId: getBusinessCard
      parameters:
      - name: businessCardId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponseBusinessCardResponseDto"
    put:
      tags:
      - business-card-controller
      operationId: updateBusinessCard
      parameters:
      - name: businessCardId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BusinessCardRequestDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponseBusinessCardResponseDto"
    delete:
      tags:
      - business-card-controller
      operationId: deleteBusinessCard
      parameters:
      - name: businessCardId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponseVoid"
  /api/chat/rooms/{roomId}/name:
    put:
      tags:
      - Chat
      summary: 채팅방 이름 변경
      description: 채팅방 이름을 변경합니다. (방장만 가능)
      operationId: updateRoomName
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      - name: roomId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: newName
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponseChatRoomResponseDto"
  /api/alarms/{alarmId}/read:
    put:
      tags:
      - Alarm
      summary: 알람 읽음 처리
      description: 특정 알람을 읽음 상태로 변경합니다.
      operationId: markAsRead
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      - name: alarmId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponseAlarmResponseDto"
  /api/alarms/read-all:
    put:
      tags:
      - Alarm
      summary: 모든 알람 읽음 처리
      description: 사용자의 모든 알람을 읽음 상태로 변경합니다.
      operationId: markAllAsRead
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponseVoid"
  /api/websocket/trigger-health-check:
    post:
      tags:
      - WebSocket Health
      summary: 헬스체크 강제 실행
      description: 즉시 WebSocket 헬스체크를 실행합니다.
      operationId: triggerHealthCheck
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponseString"
  /api/websocket/send-system-message/{userId}:
    post:
      tags:
      - WebSocket Health
      summary: 사용자에게 시스템 메시지 전송
      description: 특정 사용자에게 시스템 메시지를 전송합니다.
      operationId: sendSystemMessage
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
      - name: messageType
        in: query
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponseString"
  /api/websocket/broadcast-notification:
    post:
      tags:
      - WebSocket Health
      summary: 시스템 알림 브로드캐스트
      description: 모든 온라인 사용자에게 시스템 알림을 브로드캐스트합니다.
      operationId: broadcastNotification
      parameters:
      - name: message
        in: query
        required: true
        schema:
          type: string
      - name: type
        in: query
        required: false
        schema:
          type: string
          default: info
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponseString"
  /api/v1/users/signup:
    post:
      tags:
      - user-controller
      operationId: signup
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserSignupRequestDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponseUserSignupResponseDto"
  /api/v1/users/login:
    post:
      tags:
      - user-controller
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserLoginRequestDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponseUserLoginResponseDto"
  /api/v1/resumes:
    get:
      tags:
      - profile-controller
      operationId: getResumeList
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 1
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 12
      - name: query
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponseObject"
    post:
      tags:
      - resume-controller
      operationId: createResume
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResumeRequestDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponseResumeResponseDto"
  /api/v1/network/friends/{friendUserId}:
    post:
      tags:
      - network-controller
      operationId: addFriend
      parameters:
      - name: friendUserId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponseVoid"
    delete:
      tags:
      - network-controller
      operationId: removeFriend
      parameters:
      - name: friendUserId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponseVoid"
  /api/v1/business-cards:
    get:
      tags:
      - business-card-controller
      operationId: getMyBusinessCards
      parameters:
      - name: query
        in: query
        required: false
        schema:
          type: string
      - name: company
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponseListBusinessCardResponseDto"
    post:
      tags:
      - business-card-controller
      operationId: createBusinessCard
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BusinessCardRequestDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponseBusinessCardResponseDto"
  /api/v1/business-cards/{businessCardId}/share:
    post:
      tags:
      - business-card-controller
      operationId: shareBusinessCard
      parameters:
      - name: businessCardId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponseMapStringObject"
  /api/v1/business-cards/{businessCardId}/reject:
    post:
      tags:
      - business-card-controller
      operationId: rejectBusinessCardRequest
      parameters:
      - name: businessCardId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponseVoid"
  /api/v1/business-cards/{businessCardId}/accept:
    post:
      tags:
      - business-card-controller
      operationId: acceptBusinessCardRequest
      parameters:
      - name: businessCardId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponseVoid"
  /api/friend-requests/{requestId}/reject:
    post:
      tags:
      - Friend Request
      summary: 친구 요청 거절
      description: 받은 친구 요청을 거절합니다.
      operationId: rejectFriendRequest
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      - name: requestId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponseString"
  /api/friend-requests/{requestId}/cancel:
    post:
      tags:
      - Friend Request
      summary: 친구 요청 취소
      description: 보낸 친구 요청을 취소합니다.
      operationId: cancelFriendRequest
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      - name: requestId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponseString"
  /api/friend-requests/{requestId}/accept:
    post:
      tags:
      - Friend Request
      summary: 친구 요청 수락
      description: 받은 친구 요청을 수락합니다.
      operationId: acceptFriendRequest
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      - name: requestId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponseString"
  /api/chat/rooms:
    get:
      tags:
      - Chat
      summary: 내 채팅방 목록 조회
      description: 현재 사용자가 참여하고 있는 모든 채팅방 목록을 조회합니다.
      operationId: getUserChatRooms
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 10
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponseListChatRoomResponseDto"
    post:
      tags:
      - Chat
      summary: 1:1 채팅방 생성
      description: 새로운 1:1 채팅방을 생성하거나 기존 채팅방을 반환합니다.
      operationId: createChatRoom
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      - name: participantId
        in: query
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponseChatRoomResponseDto"
  /api/chat/rooms/{roomId}/messages:
    get:
      tags:
      - Chat
      summary: 특정 채팅방 메시지 내역 조회
      description: 특정 채팅방의 이전 메시지 내역을 페이지네이션으로 조회합니다.
      operationId: getChatRoomMessages
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      - name: roomId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: lastMessageId
        in: query
        required: false
        schema:
          type: string
          format: uuid
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 30
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponseListChatMessageResponseDto"
    post:
      tags:
      - Chat
      summary: 메시지 전송
      description: "WebSocket 통신과 별개로, 전송된 메시지를 서버 DB에 기록합니다."
      operationId: sendMessage
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      - name: roomId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChatMessageRequestDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponseChatMessageResponseDto"
  /api/chat/rooms/{roomId}/invite:
    post:
      tags:
      - Chat
      summary: 사용자 초대
      description: 기존 채팅방에 사용자를 초대합니다.
      operationId: inviteUsers
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      - name: roomId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InviteUserRequestDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponseChatRoomResponseDto"
  /api/chat/rooms/group:
    post:
      tags:
      - Chat
      summary: 그룹 채팅방 생성
      description: 새로운 그룹 채팅방을 생성합니다.
      operationId: createGroupChatRoom
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      - name: roomName
        in: query
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InviteUserRequestDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponseChatRoomResponseDto"
  /api/chat/rooms/business-card:
    post:
      tags:
      - Chat
      summary: 명함 기반 1:1 채팅방 생성
      description: 명함 ID를 통해 해당 사용자와의 1:1 채팅방을 생성하거나 기존 채팅방을 반환합니다.
      operationId: createChatRoomByBusinessCard
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      - name: businessCardId
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponseChatRoomResponseDto"
  /api/auth/logout:
    post:
      tags:
      - auth-controller
      operationId: logout
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties: {}
  /api/alarms:
    get:
      tags:
      - Alarm
      summary: 알람 목록 조회
      description: 사용자의 알람 목록을 페이징으로 조회합니다.
      operationId: getUserAlarms
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 10
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponsePageAlarmResponseDto"
    post:
      tags:
      - Alarm
      summary: 알람 생성
      description: 새로운 알람을 생성합니다.
      operationId: createAlarm
      parameters:
      - name: Authorization
        in: header
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AlarmRequestDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponseAlarmResponseDto"
  /api/websocket/user-status/{userId}:
    get:
      tags:
      - WebSocket Health
      summary: 사용자 온라인 상태 확인
      description: 특정 사용자가 현재 온라인인지 확인합니다.
      operationId: checkUserStatus
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponseMapStringObject"
  /api/websocket/stats:
    get:
      tags:
      - WebSocket Health
      summary: WebSocket 연결 통계
      description: WebSocket 연결에 대한 상세 통계를 조회합니다.
      operationId: getConnectionStats
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponseMapStringObject"
  /api/websocket/online-users:
    get:
      tags:
      - WebSocket Health
      summary: 온라인 사용자 목록 조회
      description: 현재 WebSocket으로 연결된 사용자 목록을 조회합니다.
      operationId: getOnlineUsers
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponseSetString"
  /api/websocket/health:
    get:
      tags:
      - WebSocket Health
      summary: WebSocket 헬스 상태 조회
      description: 현재 WebSocket 연결 상태와 통계를 조회합니다.
      operationId: getWebSocketHealth
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponseWebSocketStats"
  /api/v1/users:
    get:
      tags:
      - user-controller
      operationId: getAllUsers
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/v1/profiles/{userId}:
    get:
      tags:
      - profile-controller
      operationId: getProfile
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponseProfileResponseDto"
  /api/v1/network:
    get:
      tags:
      - network-controller
      operationId: getUserNetwork
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponseNetworkResponseDto"
  /api/v1/network/recommendations:
    get:
      tags:
      - network-controller
      operationId: getRecommendedConnections
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponseListNetworkNodeDto"
  /api/friend-requests/sent:
    get:
      tags:
      - Friend Request
      summary: 보낸 친구 요청 목록
      description: 내가 보낸 대기 중인 친구 요청 목록을 조회합니다.
      operationId: getSentRequests
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponseListFriendRequest"
  /api/friend-requests/received:
    get:
      tags:
      - Friend Request
      summary: 받은 친구 요청 목록
      description: 내가 받은 대기 중인 친구 요청 목록을 조회합니다.
      operationId: getReceivedRequests
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponseListFriendRequest"
  /api/auth/oauth/status:
    get:
      tags:
      - auth-controller
      operationId: getOAuthStatus
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties: {}
  /api/auth/me:
    get:
      tags:
      - auth-controller
      operationId: getCurrentUser
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties: {}
  /api/alarms/{alarmId}:
    get:
      tags:
      - Alarm
      summary: 알람 상세 조회
      description: 특정 알람의 상세 정보를 조회합니다.
      operationId: getAlarm
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      - name: alarmId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponseAlarmResponseDto"
    delete:
      tags:
      - Alarm
      summary: 알람 삭제
      description: 특정 알람을 삭제합니다.
      operationId: deleteAlarm
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      - name: alarmId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponseVoid"
  /api/alarms/unread:
    get:
      tags:
      - Alarm
      summary: 읽지 않은 알람 조회
      description: 사용자의 읽지 않은 알람 목록을 조회합니다.
      operationId: getUnreadAlarms
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponseListAlarmResponseDto"
  /api/alarms/unread/count:
    get:
      tags:
      - Alarm
      summary: 읽지 않은 알람 개수 조회
      description: 사용자의 읽지 않은 알람 개수를 조회합니다.
      operationId: getUnreadAlarmCount
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponseLong"
  /api/alarms/type/{alarmType}:
    get:
      tags:
      - Alarm
      summary: 알람 타입별 조회
      description: 특정 타입의 알람 목록을 조회합니다.
      operationId: getAlarmsByType
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      - name: alarmType
        in: path
        required: true
        schema:
          type: string
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 10
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponsePageAlarmResponseDto"
  /api/alarms/search:
    get:
      tags:
      - Alarm
      summary: 알람 제목 검색
      description: 제목으로 알람을 검색합니다.
      operationId: searchAlarmsByTitle
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      - name: keyword
        in: query
        required: true
        schema:
          type: string
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 10
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponsePageAlarmResponseDto"
  /api/chat/rooms/{roomId}/users/{userId}:
    delete:
      tags:
      - Chat
      summary: 사용자 내보내기
      description: 채팅방에서 사용자를 내보냅니다. (방장만 가능)
      operationId: removeUser
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      - name: roomId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: userId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiResponseChatRoomResponseDto"
components:
  schemas:
    UserUpdateRequestDto:
      type: object
      properties:
        nickname:
          type: string
    EducationDto:
      type: object
      properties:
        schoolName:
          type: string
        major:
          type: string
        degree:
          type: string
        period:
          type: string
        description:
          type: string
    ExperienceDto:
      type: object
      properties:
        companyName:
          type: string
        position:
          type: string
        period:
          type: string
        description:
          type: string
    ProjectDto:
      type: object
      properties:
        projectName:
          type: string
        period:
          type: string
        description:
          type: string
        role:
          type: string
        techStack:
          type: array
          items:
            type: string
        projectUrl:
          type: string
    ResumeRequestDto:
      type: object
      properties:
        title:
          type: string
        introduction:
          type: string
        experience:
          type: array
          items:
            $ref: "#/components/schemas/ExperienceDto"
        education:
          type: array
          items:
            $ref: "#/components/schemas/EducationDto"
        skills:
          type: array
          items:
            type: string
        projects:
          type: array
          items:
            $ref: "#/components/schemas/ProjectDto"
        links:
          type: array
          items:
            type: string
    ApiResponseResumeResponseDto:
      type: object
      properties:
        success:
          type: boolean
        data:
          $ref: "#/components/schemas/ResumeResponseDto"
        message:
          type: string
    ResumeResponseDto:
      type: object
      properties:
        resumeId:
          type: string
        userId:
          type: string
        title:
          type: string
        introduction:
          type: string
        experience:
          type: array
          items:
            $ref: "#/components/schemas/ExperienceDto"
        education:
          type: array
          items:
            $ref: "#/components/schemas/EducationDto"
        skills:
          type: array
          items:
            type: string
        projects:
          type: array
          items:
            $ref: "#/components/schemas/ProjectDto"
        links:
          type: array
          items:
            type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    ProfileUpdateRequestDto:
      type: object
      properties:
        name:
          type: string
        jobTitle:
          type: string
        profileImageUrl:
          type: string
        introduction:
          type: string
        tags:
          type: array
          items:
            type: string
        skills:
          type: array
          items:
            type: string
        experience:
          type: array
          items:
            $ref: "#/components/schemas/ExperienceDto"
        education:
          type: array
          items:
            $ref: "#/components/schemas/EducationDto"
    ApiResponseProfileResponseDto:
      type: object
      properties:
        success:
          type: boolean
        data:
          $ref: "#/components/schemas/ProfileResponseDto"
        message:
          type: string
    ProfileResponseDto:
      type: object
      properties:
        userId:
          type: string
        name:
          type: string
        jobTitle:
          type: string
        profileImageUrl:
          type: string
        introduction:
          type: string
        tags:
          type: array
          items:
            type: string
        experience:
          type: array
          items:
            $ref: "#/components/schemas/ExperienceDto"
        education:
          type: array
          items:
            $ref: "#/components/schemas/EducationDto"
        skills:
          type: array
          items:
            type: string
    BusinessCardRequestDto:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        company:
          type: string
        position:
          type: string
        skills:
          type: array
          items:
            type: string
    ApiResponseBusinessCardResponseDto:
      type: object
      properties:
        success:
          type: boolean
        data:
          $ref: "#/components/schemas/BusinessCardResponseDto"
        message:
          type: string
    BusinessCardResponseDto:
      type: object
      properties:
        businessCardId:
          type: string
        name:
          type: string
        email:
          type: string
        company:
          type: string
        position:
          type: string
        skills:
          type: array
          items:
            type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    ApiResponseChatRoomResponseDto:
      type: object
      properties:
        success:
          type: boolean
        data:
          $ref: "#/components/schemas/ChatRoomResponseDto"
        message:
          type: string
    ChatMessageResponseDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        content:
          type: string
        sender:
          $ref: "#/components/schemas/UserInfoDto"
        chatRoomId:
          type: string
          format: uuid
        sentAt:
          type: string
          format: date-time
    ChatRoomResponseDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        type:
          type: string
          enum:
          - ONE_TO_ONE
          - GROUP
        creator:
          $ref: "#/components/schemas/UserInfoDto"
        createdAt:
          type: string
          format: date-time
        participants:
          type: array
          items:
            $ref: "#/components/schemas/UserInfoDto"
        lastMessage:
          $ref: "#/components/schemas/ChatMessageResponseDto"
        unreadCount:
          type: integer
          format: int64
    UserInfoDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        nickname:
          type: string
    AlarmResponseDto:
      type: object
      properties:
        alarmId:
          type: string
        title:
          type: string
        content:
          type: string
        alarmTime:
          type: string
          format: date-time
        alarmType:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        relatedEntityId:
          type: string
          format: uuid
        relatedEntityType:
          type: string
        actionData:
          type: string
        read:
          type: boolean
    ApiResponseAlarmResponseDto:
      type: object
      properties:
        success:
          type: boolean
        data:
          $ref: "#/components/schemas/AlarmResponseDto"
        message:
          type: string
    ApiResponseVoid:
      type: object
      properties:
        success:
          type: boolean
        data: {}
        message:
          type: string
    ApiResponseString:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: string
        message:
          type: string
    UserSignupRequestDto:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        nickname:
          type: string
    ApiResponseUserSignupResponseDto:
      type: object
      properties:
        success:
          type: boolean
        data:
          $ref: "#/components/schemas/UserSignupResponseDto"
        message:
          type: string
    UserSignupResponseDto:
      type: object
      properties:
        userId:
          type: string
        email:
          type: string
        name:
          type: string
    UserLoginRequestDto:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    ApiResponseUserLoginResponseDto:
      type: object
      properties:
        success:
          type: boolean
        data:
          $ref: "#/components/schemas/UserLoginResponseDto"
        message:
          type: string
    UserLoginResponseDto:
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
    ApiResponseMapStringObject:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
          additionalProperties: {}
        message:
          type: string
    ChatMessageRequestDto:
      type: object
      properties:
        content:
          type: string
    ApiResponseChatMessageResponseDto:
      type: object
      properties:
        success:
          type: boolean
        data:
          $ref: "#/components/schemas/ChatMessageResponseDto"
        message:
          type: string
    InviteUserRequestDto:
      type: object
      properties:
        userIds:
          type: array
          items:
            type: string
            format: uuid
    AlarmRequestDto:
      type: object
      properties:
        title:
          type: string
        content:
          type: string
        alarmTime:
          type: string
          format: date-time
        alarmType:
          type: string
    ApiResponseSetString:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: array
          items:
            type: string
          uniqueItems: true
        message:
          type: string
    ApiResponseWebSocketStats:
      type: object
      properties:
        success:
          type: boolean
        data:
          $ref: "#/components/schemas/WebSocketStats"
        message:
          type: string
    WebSocketStats:
      type: object
      properties:
        activeConnections:
          type: integer
          format: int32
        totalConnections:
          type: integer
          format: int32
        totalDisconnections:
          type: integer
          format: int32
        lastHealthCheckTime:
          type: string
          format: date-time
        registeredUsers:
          type: integer
          format: int32
    ApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        data: {}
        message:
          type: string
    ApiResponseNetworkResponseDto:
      type: object
      properties:
        success:
          type: boolean
        data:
          $ref: "#/components/schemas/NetworkResponseDto"
        message:
          type: string
    NetworkConnectionDto:
      type: object
      properties:
        fromUserId:
          type: string
        toUserId:
          type: string
        relationshipType:
          type: string
    NetworkNodeDto:
      type: object
      properties:
        userId:
          type: string
        name:
          type: string
        email:
          type: string
        company:
          type: string
        position:
          type: string
        skills:
          type: array
          items:
            type: string
        connectionLevel:
          type: integer
          format: int32
    NetworkResponseDto:
      type: object
      properties:
        nodes:
          type: array
          items:
            $ref: "#/components/schemas/NetworkNodeDto"
        connections:
          type: array
          items:
            $ref: "#/components/schemas/NetworkConnectionDto"
        stats:
          $ref: "#/components/schemas/NetworkStatsDto"
    NetworkStatsDto:
      type: object
      properties:
        totalConnections:
          type: integer
          format: int32
        directFriends:
          type: integer
          format: int32
        mutualConnections:
          type: integer
          format: int32
    ApiResponseListNetworkNodeDto:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: array
          items:
            $ref: "#/components/schemas/NetworkNodeDto"
        message:
          type: string
    ApiResponseListBusinessCardResponseDto:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: array
          items:
            $ref: "#/components/schemas/BusinessCardResponseDto"
        message:
          type: string
    ApiResponseListFriendRequest:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: array
          items:
            $ref: "#/components/schemas/FriendRequest"
        message:
          type: string
    FriendRequest:
      type: object
      properties:
        requestId:
          type: string
          format: uuid
        senderId:
          type: string
          format: uuid
        receiverId:
          type: string
          format: uuid
        status:
          type: string
          enum:
          - PENDING
          - ACCEPTED
          - REJECTED
          - CANCELLED
        message:
          type: string
        sentAt:
          type: string
          format: date-time
        respondedAt:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        pending:
          type: boolean
        completed:
          type: boolean
    ApiResponseListChatRoomResponseDto:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: array
          items:
            $ref: "#/components/schemas/ChatRoomResponseDto"
        message:
          type: string
    ApiResponseListChatMessageResponseDto:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: array
          items:
            $ref: "#/components/schemas/ChatMessageResponseDto"
        message:
          type: string
    ApiResponsePageAlarmResponseDto:
      type: object
      properties:
        success:
          type: boolean
        data:
          $ref: "#/components/schemas/PageAlarmResponseDto"
        message:
          type: string
    PageAlarmResponseDto:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        pageable:
          $ref: "#/components/schemas/PageableObject"
        numberOfElements:
          type: integer
          format: int32
        first:
          type: boolean
        last:
          type: boolean
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: "#/components/schemas/AlarmResponseDto"
        number:
          type: integer
          format: int32
        sort:
          $ref: "#/components/schemas/SortObject"
        empty:
          type: boolean
    PageableObject:
      type: object
      properties:
        unpaged:
          type: boolean
        paged:
          type: boolean
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        offset:
          type: integer
          format: int64
        sort:
          $ref: "#/components/schemas/SortObject"
    SortObject:
      type: object
      properties:
        sorted:
          type: boolean
        unsorted:
          type: boolean
        empty:
          type: boolean
    ApiResponseListAlarmResponseDto:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: array
          items:
            $ref: "#/components/schemas/AlarmResponseDto"
        message:
          type: string
    ApiResponseLong:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: integer
          format: int64
        message:
          type: string
